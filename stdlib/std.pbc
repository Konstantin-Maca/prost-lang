push 0 copy ; the Object #0
    copy pushc ; the Global context-object (called "Globals" below)

push 0 dup
    gtx deff Object ; Global variable for the Object #1
    gtx setf Object

gtx dup dup dup deff Gtx setf Gtx ; Global variable for the Globals

push 0 copy ; Int proto-object #2
    dup dup dup dup
    gtx deff Int gtx setf Int
    deff @ int 0 setfi @

push 0 copy ; Char #3
    dup dup dup dup
    gtx deff Char gtx setf Char
    deff @ char 0 setfc @

push 0 copy ; Float #4
    dup dup dup dup
    gtx deff Float gtx setf Float
    deff @ float 0.0 setff @

push 0 copy ; Array #5
    dup dup dup dup
    gtx deff Array gtx setf Array
    deff @ pusha arr setfa @

block 0 ret block 0
push 0 copy ; Lambda #6
    dup dup dup dup
    gtx deff Block gtx setf Block
    deff @ push 0 swap setf @ 

block 1 ; [ Int . Int ]
    getfi ctx addfi push 2 copy dup dup push 2 swap deff @ setfi @
    ret
block 1 push 6 copy dup dup push 6 swap deff @ push 1 swap setf @
    pusha push 2 arr push 5 copy dup dup push 5 deff @ push 0 swap setf @
    pusha push 2 arr push 5 copy dup dup push 5 deff @ push 0 swap setf @
    push 2 defm +

block 2 ; [ Int . Int ]
    getfi ctx subfi push 2 copy dup dup push 2 swap deff @ setfi @
    ret
block 2 push 6 copy dup dup push 6 swap deff @ push 1 swap setf @
    pusha push 2 arr push 5 copy dup dup push 5 deff @ push 0 swap setf @
    pusha push 2 arr push 5 copy dup dup push 5 deff @ push 0 swap setf @
    push 2 defm +

$
